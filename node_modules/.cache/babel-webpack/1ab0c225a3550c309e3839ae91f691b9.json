{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ng-zorro-antd/form\";\nimport * as i3 from \"ng-zorro-antd/grid\";\nimport * as i4 from \"@angular/common\";\n\nfunction EmployeeAddComponent_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Please input your username!\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction EmployeeAddComponent_ng_template_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"The username is redundant!\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction EmployeeAddComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, EmployeeAddComponent_ng_template_6_ng_container_0_Template, 2, 0, \"ng-container\", 17);\n    i0.ɵɵtemplate(1, EmployeeAddComponent_ng_template_6_ng_container_1_Template, 2, 0, \"ng-container\", 17);\n  }\n\n  if (rf & 2) {\n    const control_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", control_r6.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r6.hasError(\"duplicated\"));\n  }\n}\n\nfunction EmployeeAddComponent_ng_template_13_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"The input is not valid E-mail!\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction EmployeeAddComponent_ng_template_13_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Please input your E-mail!\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction EmployeeAddComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, EmployeeAddComponent_ng_template_13_ng_container_0_Template, 2, 0, \"ng-container\", 17);\n    i0.ɵɵtemplate(1, EmployeeAddComponent_ng_template_13_ng_container_1_Template, 2, 0, \"ng-container\", 17);\n  }\n\n  if (rf & 2) {\n    const control_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", control_r9.hasError(\"email\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r9.hasError(\"required\"));\n  }\n}\n\nfunction EmployeeAddComponent_ng_template_25_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Please confirm your password!\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction EmployeeAddComponent_ng_template_25_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Password is inconsistent!\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction EmployeeAddComponent_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, EmployeeAddComponent_ng_template_25_ng_container_0_Template, 2, 0, \"ng-container\", 17);\n    i0.ɵɵtemplate(1, EmployeeAddComponent_ng_template_25_ng_container_1_Template, 2, 0, \"ng-container\", 17);\n  }\n\n  if (rf & 2) {\n    const control_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", control_r12.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r12.hasError(\"confirm\"));\n  }\n}\n\nexport class EmployeeAddComponent {\n  constructor(fb) {\n    this.fb = fb; // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\n    this.userNameAsyncValidator = control => new Observable(observer => {\n      setTimeout(() => {\n        if (control.value === 'JasonWood') {\n          // you have to return `{error: true}` to mark it as an error event\n          observer.next({\n            error: true,\n            duplicated: true\n          });\n        } else {\n          observer.next(null);\n        }\n\n        observer.complete();\n      }, 1000);\n    });\n\n    this.confirmValidator = control => {\n      if (!control.value) {\n        return {\n          error: true,\n          required: true\n        };\n      } else if (control.value !== this.validateForm.controls.password.value) {\n        return {\n          confirm: true,\n          error: true\n        };\n      }\n\n      return {};\n    };\n\n    this.validateForm = this.fb.group({\n      userName: ['', [Validators.required], [this.userNameAsyncValidator]],\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.required]],\n      confirm: ['', [this.confirmValidator]],\n      comment: ['', [Validators.required]]\n    });\n  }\n\n  submitForm() {\n    console.log('submit', this.validateForm.value);\n  }\n\n  resetForm(e) {\n    e.preventDefault();\n    this.validateForm.reset();\n\n    for (const key in this.validateForm.controls) {\n      if (this.validateForm.controls.hasOwnProperty(key)) {\n        this.validateForm.controls[key].markAsPristine();\n        this.validateForm.controls[key].updateValueAndValidity();\n      }\n    }\n  }\n\n  validateConfirmPassword() {\n    setTimeout(() => this.validateForm.controls.confirm.updateValueAndValidity());\n  }\n\n  ngOnInit() {}\n\n}\n\nEmployeeAddComponent.ɵfac = function EmployeeAddComponent_Factory(t) {\n  return new (t || EmployeeAddComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n\nEmployeeAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeAddComponent,\n  selectors: [[\"app-employee-add\"]],\n  decls: 38,\n  vars: 17,\n  consts: [[\"nz-form\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"nzRequired\", \"\", 3, \"nzSpan\"], [\"nzHasFeedback\", \"\", \"nzValidatingTip\", \"Validating...\", 3, \"nzSpan\", \"nzErrorTip\"], [\"nz-input\", \"\", \"formControlName\", \"userName\", \"placeholder\", \"async validate try to write JasonWood\"], [\"userErrorTpl\", \"\"], [\"nzHasFeedback\", \"\", 3, \"nzSpan\", \"nzErrorTip\"], [\"nz-input\", \"\", \"formControlName\", \"email\", \"placeholder\", \"email\", \"type\", \"email\"], [\"emailErrorTpl\", \"\"], [\"nzHasFeedback\", \"\", \"nzErrorTip\", \"Please input your password!\", 3, \"nzSpan\"], [\"nz-input\", \"\", \"type\", \"password\", \"formControlName\", \"password\", 3, \"ngModelChange\"], [\"nz-input\", \"\", \"type\", \"password\", \"formControlName\", \"confirm\", \"placeholder\", \"confirm your password\"], [\"passwordErrorTpl\", \"\"], [\"nzErrorTip\", \"Please write something here!\", 3, \"nzSpan\"], [\"formControlName\", \"comment\", \"nz-input\", \"\", \"rows\", \"2\", \"placeholder\", \"write any thing\"], [3, \"nzOffset\", \"nzSpan\"], [\"nz-button\", \"\", \"nzType\", \"primary\", 3, \"disabled\"], [\"nz-button\", \"\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function EmployeeAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function EmployeeAddComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(1, \"nz-form-item\");\n      i0.ɵɵelementStart(2, \"nz-form-label\", 1);\n      i0.ɵɵtext(3, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"nz-form-control\", 2);\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵtemplate(6, EmployeeAddComponent_ng_template_6_Template, 2, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"nz-form-item\");\n      i0.ɵɵelementStart(9, \"nz-form-label\", 1);\n      i0.ɵɵtext(10, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"nz-form-control\", 5);\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵtemplate(13, EmployeeAddComponent_ng_template_13_Template, 2, 2, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"nz-form-item\");\n      i0.ɵɵelementStart(16, \"nz-form-label\", 1);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"nz-form-control\", 8);\n      i0.ɵɵelementStart(19, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeAddComponent_Template_input_ngModelChange_19_listener() {\n        return ctx.validateConfirmPassword();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"nz-form-item\");\n      i0.ɵɵelementStart(21, \"nz-form-label\", 1);\n      i0.ɵɵtext(22, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"nz-form-control\", 5);\n      i0.ɵɵelement(24, \"input\", 10);\n      i0.ɵɵtemplate(25, EmployeeAddComponent_ng_template_25_Template, 2, 2, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"nz-form-item\");\n      i0.ɵɵelementStart(28, \"nz-form-label\", 1);\n      i0.ɵɵtext(29, \"Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"nz-form-control\", 12);\n      i0.ɵɵelement(31, \"textarea\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"nz-form-item\");\n      i0.ɵɵelementStart(33, \"nz-form-control\", 14);\n      i0.ɵɵelementStart(34, \"button\", 15);\n      i0.ɵɵtext(35, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function EmployeeAddComponent_Template_button_click_36_listener($event) {\n        return ctx.resetForm($event);\n      });\n      i0.ɵɵtext(37, \"Reset\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(7);\n\n      const _r2 = i0.ɵɵreference(14);\n\n      const _r4 = i0.ɵɵreference(26);\n\n      i0.ɵɵproperty(\"formGroup\", ctx.validateForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzSpan\", 7);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzSpan\", 12)(\"nzErrorTip\", _r0);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"nzSpan\", 7);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzSpan\", 12)(\"nzErrorTip\", _r2);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"nzSpan\", 7);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzSpan\", 12);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"nzSpan\", 7);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzSpan\", 12)(\"nzErrorTip\", _r4);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"nzSpan\", 7);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzSpan\", 12);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"nzOffset\", 7)(\"nzSpan\", 12);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.validateForm.valid);\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i2.NzFormDirective, i1.FormGroupDirective, i3.NzRowDirective, i2.NzFormItemComponent, i3.NzColDirective, i2.NzFormLabelComponent, i2.NzFormControlComponent, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgIf],\n  styles: [\"[nz-form][_ngcontent-%COMP%] {\\n    max-width: 600px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    margin-left: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlLWFkZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6ImVtcGxveWVlLWFkZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiW256LWZvcm1dIHtcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xufVxuXG5idXR0b24ge1xuICAgIG1hcmdpbi1sZWZ0OiA4cHg7XG59Il19 */\"]\n});","map":{"version":3,"sources":["/Users/firz/Work/angular/moots/project/src/app/employees/employee-add/employee-add.component.ts","/Users/firz/Work/angular/moots/project/src/app/employees/employee-add/employee-add.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { Observable, Observer } from 'rxjs';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { EmployeesService } from '../employees.service'\nimport { HttpResponse } from '@angular/common/http'\n\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css']\n})\nexport class EmployeeAddComponent implements OnInit {\n\n  // constructor(private fb: FormBuilder, private fc: FormControl, private fg: FormGroup, private ve: ValidationErrors, private v: Validators) { }\n  validateForm: FormGroup;\n\n  submitForm(): void {\n    console.log('submit', this.validateForm.value);\n  }\n\n  resetForm(e: MouseEvent): void {\n    e.preventDefault();\n    this.validateForm.reset();\n    for (const key in this.validateForm.controls) {\n      if (this.validateForm.controls.hasOwnProperty(key)) {\n        this.validateForm.controls[key].markAsPristine();\n        this.validateForm.controls[key].updateValueAndValidity();\n      }\n    }\n  }\n\n  validateConfirmPassword(): void {\n    setTimeout(() => this.validateForm.controls.confirm.updateValueAndValidity());\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  userNameAsyncValidator = (control: FormControl) =>\n    new Observable((observer: Observer<ValidationErrors | null>) => {\n      setTimeout(() => {\n        if (control.value === 'JasonWood') {\n          // you have to return `{error: true}` to mark it as an error event\n          observer.next({ error: true, duplicated: true });\n        } else {\n          observer.next(null);\n        }\n        observer.complete();\n      }, 1000);\n    });\n\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\n    if (!control.value) {\n      return { error: true, required: true };\n    } else if (control.value !== this.validateForm.controls.password.value) {\n      return { confirm: true, error: true };\n    }\n    return {};\n  };\n\n  constructor(private fb: FormBuilder) {\n    this.validateForm = this.fb.group({\n      userName: ['', [Validators.required], [this.userNameAsyncValidator]],\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.required]],\n      confirm: ['', [this.confirmValidator]],\n      comment: ['', [Validators.required]]\n    });\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<form nz-form [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm()\">\n    <nz-form-item>\n        <nz-form-label [nzSpan]=\"7\" nzRequired>Username</nz-form-label>\n        <nz-form-control [nzSpan]=\"12\" nzHasFeedback nzValidatingTip=\"Validating...\" [nzErrorTip]=\"userErrorTpl\">\n            <input nz-input formControlName=\"userName\" placeholder=\"async validate try to write JasonWood\" />\n            <ng-template #userErrorTpl let-control>\n                <ng-container *ngIf=\"control.hasError('required')\">Please input your username!</ng-container>\n                <ng-container *ngIf=\"control.hasError('duplicated')\">The username is redundant!</ng-container>\n            </ng-template>\n        </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n        <nz-form-label [nzSpan]=\"7\" nzRequired>E-mail</nz-form-label>\n        <nz-form-control [nzSpan]=\"12\" nzHasFeedback [nzErrorTip]=\"emailErrorTpl\">\n            <input nz-input formControlName=\"email\" placeholder=\"email\" type=\"email\" />\n            <ng-template #emailErrorTpl let-control>\n                <ng-container *ngIf=\"control.hasError('email')\">The input is not valid E-mail!</ng-container>\n                <ng-container *ngIf=\"control.hasError('required')\">Please input your E-mail!</ng-container>\n            </ng-template>\n        </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n        <nz-form-label [nzSpan]=\"7\" nzRequired>Password</nz-form-label>\n        <nz-form-control [nzSpan]=\"12\" nzHasFeedback nzErrorTip=\"Please input your password!\">\n            <input nz-input type=\"password\" formControlName=\"password\" (ngModelChange)=\"validateConfirmPassword()\" />\n        </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n        <nz-form-label [nzSpan]=\"7\" nzRequired>Confirm Password</nz-form-label>\n        <nz-form-control [nzSpan]=\"12\" nzHasFeedback [nzErrorTip]=\"passwordErrorTpl\">\n            <input nz-input type=\"password\" formControlName=\"confirm\" placeholder=\"confirm your password\" />\n            <ng-template #passwordErrorTpl let-control>\n                <ng-container *ngIf=\"control.hasError('required')\">Please confirm your password!</ng-container>\n                <ng-container *ngIf=\"control.hasError('confirm')\">Password is inconsistent!</ng-container>\n            </ng-template>\n        </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n        <nz-form-label [nzSpan]=\"7\" nzRequired>Comment</nz-form-label>\n        <nz-form-control [nzSpan]=\"12\" nzErrorTip=\"Please write something here!\">\n            <textarea formControlName=\"comment\" nz-input rows=\"2\" placeholder=\"write any thing\"></textarea>\n        </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n        <nz-form-control [nzOffset]=\"7\" [nzSpan]=\"12\">\n            <button nz-button nzType=\"primary\" [disabled]=\"!validateForm.valid\">Submit</button>\n            <button nz-button (click)=\"resetForm($event)\">Reset</button>\n        </nz-form-control>\n    </nz-form-item>\n</form>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}