{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../todos.service\";\nimport * as i2 from \"../todo-header/todo-header.component\";\nimport * as i3 from \"../todo-list/todo-list.component\";\nimport * as i4 from \"@angular/common\";\n\nfunction TodoComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const length_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", length_r1, \" [userInfo]=\\\"user\\\"\\n\");\n  }\n}\n\nexport class TodoComponent {\n  constructor(todosService) {\n    this.todosService = todosService;\n    this.todos = [];\n  }\n\n  remove(id) {\n    this.todosService.remove(id).subscribe(res => {\n      this.todos.splice(this.todos.findIndex(nb => nb.id === id), 1);\n    });\n  }\n\n  swapStatus(id) {\n    let curTodo = this.todos.find(nb => nb.id === id);\n    this.todosService.swapStatus(id, !curTodo.done).subscribe(res => {\n      curTodo.done = res.done;\n    });\n  }\n\n  addnew(todoName) {\n    this.todosService.addnew(todoName).subscribe(res => {\n      this.todos.push(res);\n    });\n  }\n\n  showLength() {\n    this.todosService.getTodos().subscribe(res => {\n      this.todos = [...res];\n      this.length = this.todos.length;\n    });\n    this.length = new Promise((resolve, reject) => {\n      this.length = resolve;\n    });\n  } // auto used when the page is freshed. Put some initial logic\n\n\n  ngOnInit() {\n    this.todosService.getTodos().subscribe(res => {\n      this.todos = [...res];\n      this.length = this.todos.length; // console.log(this.todos.length);\n    });\n  }\n\n  ngOnChanges() {}\n\n}\n\nTodoComponent.ɵfac = function TodoComponent_Factory(t) {\n  return new (t || TodoComponent)(i0.ɵɵdirectiveInject(i1.TodosService));\n};\n\nTodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodoComponent,\n  selectors: [[\"app-todo\"]],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 4,\n  consts: [[1, \"todos\"], [3, \"add\"], [3, \"todos\", \"del\", \"swap\"], [4, \"ngIf\"]],\n  template: function TodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"app-todo-header\", 1);\n      i0.ɵɵlistener(\"add\", function TodoComponent_Template_app_todo_header_add_1_listener($event) {\n        return ctx.addnew($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"app-todo-list\", 2);\n      i0.ɵɵlistener(\"del\", function TodoComponent_Template_app_todo_list_del_2_listener($event) {\n        return ctx.remove($event);\n      })(\"swap\", function TodoComponent_Template_app_todo_list_swap_2_listener($event) {\n        return ctx.swapStatus($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TodoComponent_ng_container_3_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵpipe(4, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"todos\", ctx.todos);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 2, ctx.length));\n    }\n  },\n  directives: [i2.TodoHeaderComponent, i3.TodoListComponent, i4.NgIf],\n  pipes: [i4.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b2RvLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["/Users/firz/Work/angular/moots/project/src/app/todos/todo/todo.component.ts","/Users/firz/Work/angular/moots/project/src/app/todos/todo/todo.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnChanges, OnInit } from '@angular/core';\nimport { TodosService } from '../todos.service'\nimport { Todo } from '../todo'\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit, OnChanges {\n\n  constructor(private todosService: TodosService) { }\n\n  todos: Todo[] = []\n  length: any;\n\n  remove(id: number) {\n    this.todosService.remove(id).subscribe(res => {\n      this.todos.splice(this.todos.findIndex(nb => nb.id === id), 1)\n    })\n  }\n\n  swapStatus(id: number) {\n    let curTodo = this.todos.find(nb => nb.id === id)\n    this.todosService.swapStatus(id, !curTodo!.done).subscribe(res => {\n      curTodo!.done = res!.done\n    })\n  }\n\n  addnew(todoName: string) {\n    this.todosService.addnew(todoName).subscribe(res => {\n      this.todos.push(res)\n    })\n  }\n\n  showLength() {\n    this.todosService.getTodos().subscribe((res: Todo[]) => {\n      this.todos = [...res];\n      this.length = this.todos.length\n    })\n    this.length = new Promise<string>((resolve, reject) => {\n      this.length = resolve;\n    });\n  }\n\n  // auto used when the page is freshed. Put some initial logic\n  ngOnInit(): void {\n    this.todosService.getTodos().subscribe((res: Todo[]) => {\n      this.todos = [...res];\n      this.length = this.todos.length\n      // console.log(this.todos.length);\n    })\n  }\n  ngOnChanges(): void {\n\n  }\n\n}\n","<div class=\"todos\">\n    <app-todo-header (add)=\"addnew($event)\"></app-todo-header>\n    <app-todo-list [todos]=\"todos\" (del)=\"remove($event)\" (swap)=\"swapStatus($event)\"></app-todo-list>\n</div>\n<!-- <mat-slider min=\"1\" max=\"100\" step=\"1\" value=\"50\"></mat-slider> -->\n<ng-container *ngIf=\"length | async as length\">\n    {{length}} [userInfo]=\"user\"\n</ng-container>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}